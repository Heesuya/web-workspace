<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.iei.user.model.dao.UserDao">

	<!-- 
		id를 해당하는 매핑해야 할 메소드 이름과 일치 
		resultType은 조회결과를 어떤 타입으로 저장할지 지정(DTO의 Alias설정이 되어있어야 함)
		별칭이 지정되어있지 않으면 resultType에 패키지부터 클래스 풀경로를 작성	
		쿼리문 내부에서 사용할 자바 데이터는 인터페이스의 메소드가 받은 객체에서 꺼내서 사용
	-->
	<select id="selectOneUser" resultType="user">
		select * from user_tbl where user_id=#{userId}
		<if test="userName != null">
		 	and user_name=#{userName}
		 </if>
		<!--  
		<if test="userPw != null"> 동적 쿼리 
		and user_pw=#{userPw}
		</if>
		 -->
	</select>
	
	<select id="checkId" resultType="user">
		select * from user_tbl where user_id=#{userId}
	</select>
	
	<!-- 
		조회결과가 단일 user를 리턴할지, List를 리턴할지의 결정은 dao interface의 메소드 리턴타입으로 결정
	  	List 내부에 들어갈 데이터 형태를 resultType에 명시
	 -->
	<select id="selectAllUser" resultType="user">
		select user_no, user_id, user_name from user_tbl
	</select>
	
	<!-- 
		insert,update,delete를 수행할때는 insert,update,delete태그를 사용해서 쿼리 작성
		-> 이때는 쿼리문 수행 결과를  int로 리턴(변경된 행의 수 리턴)
		-> 결과타입이 이미 정해져있기 때문에 resultType을 작성하지 않음 
	 -->
	<insert id="insertUser">
		insert into user_tbl values(user_seq.nextval,#{userId},#{userPw},#{userName})
	</insert>
	
	<update id="userUpdate">
		update user_tbl set user_name=#{userName} where user_no=#{userNo}
	</update>
	
	<delete id="deleteUser">
		delete from user_tbl where user_no=#{userNo}
	</delete>
	
	<select id="selectUserIdOrName" resultType="user">
		select * from user_tbl where
		<choose>
			<when test="type.equals('id')">
			user_id
			</when>
			<when test="type.equals('name')">
			user_name
			</when>	
		</choose>	
		like '%'||#{keyword}||'%'
	</select>
	
	
	<!-- 순서가 중요하다, 범위가 좁은것부터 작성 -->
	<!-- prefix 트림 내부안에 존재하면 where 붙여줘~ -->
		
	<!-- prefixOverrides   and 나 or 로 시작하면 날려  -->
	<select id="searchUser2" resultType="user">
		select * from user_tbl 
		<trim prefix="where" prefixOverrides="and/or"> 
		<if test="!userId.equals('')">
				user_id like '%'||#{userId}||'%'
			</if>
			<if test="!userName.equals('')">
				and user_name like '%'||#{userName}||'%'
			</if>
		</trim>
		<!-- 
		where
		<choose>
			<when test="!userId.equals('') and !userName.equals('')">
			user_name like '%'||#{userName}||'%' and user_id like '%'||#{userId}||'%'
			</when>
			<when test="!userId.equals('')">
			user_id like '%'||#{userId}||'%'
			</when>
			<otherwise> == else 나머지 다 이쪽으로 와~
			user_name like '%'||#{userName}||'%'
			</otherwise>
		</choose>
		-->
	</select>
	
	<select id="selectAllId" resultType="String">
		select user_id from user_tbl
	</select>	
	
	<select id="searchUser3" resultType="user">
		select * from user_tbl 
		where user_id in
		<foreach collection="array" item="userId" open="(" close=")" separator=",">
			#{userId}
		</foreach>
	</select>
	
	<select id="test" resultType="user">
		<!-- select * from user_tbl where user_no <![CDATA[ < ]]> 20  -->
		<!-- CDATA 안에서는 부등호 사용이 가능, 아래같은 경우 동적쿼리는 사용하지 못함. -->
		<![CDATA[
		select * from user_tbl where user_no < 20
		]]>
	</select>
	
	<update id="changePw">
		update user_tbl set user_pw=#{userPw} where user_no=#{userNo}
	</update>
		
</mapper>
